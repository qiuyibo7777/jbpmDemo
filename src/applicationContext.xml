<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:p="http://www.springframework.org/schema/p" 
		xmlns:aop="http://www.springframework.org/schema/aop"
		xmlns:tx="http://www.springframework.org/schema/tx"
		xmlns:context="http://www.springframework.org/schema/context" 
		xmlns:jee="http://www.springframework.org/schema/jee"
		xsi:schemaLocation="
			http://www.springframework.org/schema/aop 
			http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
			http://www.springframework.org/schema/tx 
            http://www.springframework.org/schema/tx/spring-tx.xsd 
			http://www.springframework.org/schema/beans 
			http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
			http://www.springframework.org/schema/context 
			http://www.springframework.org/schema/context/spring-context-2.5.xsd
			http://www.springframework.org/schema/jee 
			http://www.springframework.org/schema/jee/spring-jee-2.5.xsd">
	<!-- 定义使用annotation 默认通过类型(Autowired="byType")注入 -->
	<context:annotation-config />
	<!-- 定义使用component -->
	<context:component-scan base-package="com.jbpm" /> 
	 
  <!-- 载入配置的properties 文件 有两种方式 -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations" value="classpath:jdbc.properties" />
	</bean>
	<!-- 第二种载入properties的方法 -->
	<!-- <context:property-placeholder location="jdbc.properties" /> -->
	<!-- spring 数据源 -->
	
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- 配置缓冲池 -->
		<!-- 最大缓冲池的活跃链接数 -->
		<property name="maxActive" value="${connection.maxActive}" />
		<!-- 最大的等待拿链接的数量 -->
		<property name="maxIdle" value="${connection.maxIdle}" />
		<!-- 最小的等待拿链接的数量 -->
		<property name="minIdle" value="${connection.minIdle}" />
		<!-- 配置最大的等待时间 -->
		<property name="maxWait" value="${connection.maxWait}" />

	</bean>
	
	  <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
    <property name="dataSource" ref="dataSource"/>
   <property name="hibernateProperties">
     <props >
      <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
   	  <prop key="hibernate.show_sql">true</prop>
      <prop key="hibernate.format_sql">true</prop>
   	  <prop key="hibernate.hbm2ddl.auto">update</prop>
     </props>
     </property>
     <property name="mappingLocations">
			<list>
				<value>classpath:jbpm.execution.hbm.xml</value>
				<value>classpath:jbpm.history.hbm.xml</value>
				<value>classpath:jbpm.identity.hbm.xml</value>
				<value>classpath:jbpm.repository.hbm.xml</value>
				<value>classpath:jbpm.task.hbm.xml</value>
			</list>
		</property>
  </bean>
  
  <bean id="txManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
            <property name="sessionFactory" ref="sessionFactory"></property>
  </bean>
  	
   <tx:advice id="txAdvice" transaction-manager="txManager">
        <tx:attributes>
            <tx:method name="get*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="find*" propagation="SUPPORTS" read-only="true" />
            <tx:method name="load*" propagation="SUPPORTS" read-only="true" />
            <tx:method name="*" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>
         
   <aop:config>
       <aop:pointcut id="seriveMethod" 
       expression="execution(public * com.oa.service..*(..))"/>
       <aop:advisor advice-ref="txAdvice" pointcut-ref="seriveMethod"/>
   </aop:config>
    
 <!--配置jbpm4.4 -->
	<bean id="springHelper" class="org.jbpm.pvm.internal.processengine.SpringHelper">
		<property name="jbpmCfg" value="jbpm.cfg.xml"></property>
	</bean>
	<bean id="processEngine" factory-bean="springHelper"
		factory-method="createProcessEngine"></bean>
 </beans>